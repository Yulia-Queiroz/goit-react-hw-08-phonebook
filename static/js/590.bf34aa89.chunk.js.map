{"version":3,"file":"static/js/590.bf34aa89.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  margin: 64px auto;\n  background-color: #fff;\n  width: 428px;\n  height: 444px;\n  padding: 40px;\n  border-radius: 8px;\n`;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { useState } from 'react';\nimport { ContainerStyled } from './RegisterFormStyled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [emptyFields, setEmptyFields] = useState({\n    email: false,\n    password: false,\n    name: false,\n  });\n\n  const checkEmptyFields = (nameValue, emailValue, passwordValue) => {\n    if (nameValue.trim() === '') {\n      setEmptyFields(prevState => ({ ...prevState, name: true }));\n    } else {\n      setEmptyFields(prevState => ({ ...prevState, name: false }));\n    }\n\n    if (emailValue.trim() === '') {\n      setEmptyFields(prevState => ({ ...prevState, email: true }));\n    } else {\n      setEmptyFields(prevState => ({ ...prevState, email: false }));\n    }\n\n    if (passwordValue.trim() === '') {\n      setEmptyFields(prevState => ({ ...prevState, password: true }));\n    } else {\n      setEmptyFields(prevState => ({ ...prevState, password: false }));\n    }\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailValue = form.elements.email.value;\n    const passwordValue = form.elements.password.value;\n    const nameValue = form.elements.name.value;\n\n    checkEmptyFields(nameValue, emailValue, passwordValue);\n\n    if (\n      emailValue.trim() === '' ||\n      passwordValue.trim() === '' ||\n      nameValue.trim() === ''\n    ) {\n      return;\n    }\n\n    dispatch(\n      register({\n        name: nameValue,\n        email: emailValue,\n        password: passwordValue,\n      })\n    );\n    form.reset();\n  };\n  return (\n    <ContainerStyled>\n      <Container component=\"div\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" onSubmit={handleFormSubmit} autoComplete=\"off\">\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              autoFocus\n              helperText={emptyFields.name && 'This field is required.'}\n            />\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              type=\"email\"\n              autoFocus\n              helperText={emptyFields.email && 'This field is required.'}\n            />\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              helperText={emptyFields.password && 'This field is required.'}\n            />\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ContainerStyled>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_useState","useState","email","password","name","_useState2","_slicedToArray","emptyFields","setEmptyFields","_jsx","children","Container","component","maxWidth","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","evt","preventDefault","form","currentTarget","emailValue","elements","value","passwordValue","nameValue","trim","prevState","_objectSpread","checkEmptyFields","register","reset","autoComplete","TextField","margin","fullWidth","label","autoFocus","helperText","type","Button","mt","mb","RegisterForm"],"sourceRoot":""}