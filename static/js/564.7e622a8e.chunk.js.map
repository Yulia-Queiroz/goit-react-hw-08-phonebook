{"version":3,"file":"static/js/564.7e622a8e.chunk.js","mappings":"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","sources":["components/LoginForm/LoginFormStyled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  margin: 64px auto;\n  background-color: #fff;\n  width: 436px;\n  height: 364px;\n  padding: 40px;\n  border-radius: 8px;\n`;\n","import { useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { ContainerStyled } from './LoginFormStyled';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [emptyFields, setEmptyFields] = useState({\n    email: false,\n    password: false,\n  });\n\n  const checkEmptyFields = (emailValue, passwordValue) => {\n    if (emailValue.trim() === '') {\n      setEmptyFields(prevState => ({ ...prevState, email: true }));\n    } else {\n      setEmptyFields(prevState => ({ ...prevState, email: false }));\n    }\n\n    if (passwordValue.trim() === '') {\n      setEmptyFields(prevState => ({ ...prevState, password: true }));\n    } else {\n      setEmptyFields(prevState => ({ ...prevState, password: false }));\n    }\n  };\n\n  const handleFormSubmit = async evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailValue = form.elements.email.value;\n    const passwordValue = form.elements.password.value;\n\n    checkEmptyFields(emailValue, passwordValue);\n\n    if (emailValue.trim() === '' || passwordValue.trim() === '') {\n      return;\n    }\n    dispatch(\n      logIn({\n        email: emailValue,\n        password: passwordValue,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <ContainerStyled>\n      <Container component=\"div\" maxWidth=\"xs\" sx={{ margin: 'auto' }}>\n        <Box\n          sx={{\n            margin: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleFormSubmit} autoComplete=\"off\">\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Email Address\"\n              type=\"email\"\n              name=\"email\"\n              autoFocus\n              helperText={emptyFields.email && 'This field is required.'}\n            />\n\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              helperText={emptyFields.password && 'This field is required.'}\n            />\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              sx={{ mt: 3, mb: 0 }}\n            >\n              Log in\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ContainerStyled>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_useState","useState","email","password","_useState2","_slicedToArray","emptyFields","setEmptyFields","checkEmptyFields","emailValue","passwordValue","trim","prevState","_objectSpread","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","evt","form","wrap","_context","prev","next","preventDefault","currentTarget","elements","value","abrupt","logIn","reset","stop","_x","apply","arguments","_jsx","children","Container","component","maxWidth","sx","margin","_jsxs","Box","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","autoComplete","TextField","fullWidth","label","type","name","autoFocus","helperText","Button","mt","mb","LoginForm"],"sourceRoot":""}